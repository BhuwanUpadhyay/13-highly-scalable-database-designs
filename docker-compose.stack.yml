version: '3.7'

volumes:
  postgres_data: {}

networks:
  gateway:
    external: false
  backend:
    external: false
  frontend:
    external: false

services:

  # -------------------------------------------------
  # Api Gateway
  # -------------------------------------------------

  gateway:
    image: devopsfaith/krakend:1.1.1-alpine
    ports:
      - 8080:8080
    networks:
      - gateway
      - backend
    depends_on:
      - command
      - query
    volumes:
      - ./docker/krakend:/etc/krakend/
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  # -------------------------------------------------
  # Applications
  # -------------------------------------------------

  command:
    image: bhuwanupadhyay/employees-command
    ports:
      - 8080
    depends_on:
      - primary
    environment:
      - spring.datasource.driver-class-name=org.postgresql.Driver
      - spring.datasource.username=repl_user
      - spring.datasource.password=repl_password
      - spring.datasource.url=jdbc:postgresql://primary:5432/employees
    networks:
      - backend
    deploy:
      replicas: 1
      update_config:
        delay: 25s
      restart_policy:
        condition: on-failure

  query:
    image: bhuwanupadhyay/employees-query
    ports:
      - 8080
    depends_on:
      - replica
    environment:
      - spring.datasource.driver-class-name=org.postgresql.Driver
      - spring.datasource.username=repl_user
      - spring.datasource.password=repl_password
      - spring.datasource.url=jdbc:postgresql://replica:5432/employees
    networks:
      - backend
    deploy:
      replicas: 1
      update_config:
        delay: 25s
      restart_policy:
        condition: on-failure

  ui:
    image: bhuwanupadhyay/employees-ui
    ports:
      - 5000:80
    depends_on:
      - gateway
    networks:
      - frontend
      - gateway
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  # -------------------------------------------------
  # Application Backend Databases
  # -------------------------------------------------

  replica:
    image: bitnami/postgresql:12
    ports:
      - 5432
    depends_on:
      - primary
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=primary
      - POSTGRESQL_PASSWORD=password
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - backend
    deploy:
      replicas: 3
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  primary:
    image: bitnami/postgresql:12
    ports:
      - 5432
    volumes:
      - postgres_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=user
      - POSTGRESQL_PASSWORD=password
      - POSTGRESQL_DATABASE=employees
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure